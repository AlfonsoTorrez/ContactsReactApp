{"ast":null,"code":"import _classCallCheck from \"/Users/alftaurus/Desktop/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alftaurus/Desktop/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alftaurus/Desktop/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alftaurus/Desktop/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alftaurus/Desktop/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alftaurus/Desktop/reactnd-contacts-app/src/ListContacts.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ListContacts =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ListContacts, _Component);\n\n  function ListContacts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ListContacts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ListContacts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      query: ''\n    };\n\n    _this.updateQuery = function (query) {\n      _this.setState(function () {\n        return {\n          query: query.trim()\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ListContacts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var query = this.state.query;\n      var _this$props = this.props,\n          contacts = _this$props.contacts,\n          onDeleteContact = _this$props.onDeleteContact;\n      var showingContacts = query === '' ? contacts : contacts.filter(function (c) {\n        return c.name.toLowerCase().includes(query.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        className: \"list-contacts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"list-contacts-top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"search-contacts\",\n        type: \"text\",\n        placeholder: \"Search Contacts\",\n        value: query,\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })), showingContacts.length !== contacts.length && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"ol\", {\n        className: \"contact-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, showingContacts.map(function (contact) {\n        return React.createElement(\"li\", {\n          key: contact.id,\n          className: \"contact-list-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"contact-avatar\",\n          style: {\n            backgroundImage: \"url(\".concat(contact.avatarURL, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"contact-details\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, contact.name), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, contact.handle)), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return onDeleteContact(contact);\n          },\n          className: \"contact-remove\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, \"Remove\"));\n      })));\n    }\n  }]);\n\n  return ListContacts;\n}(Component);\n\nListContacts.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired\n};\nexport default ListContacts;","map":{"version":3,"sources":["/Users/alftaurus/Desktop/reactnd-contacts-app/src/ListContacts.js"],"names":["React","Component","PropTypes","ListContacts","state","query","updateQuery","setState","trim","props","contacts","onDeleteContact","showingContacts","filter","c","name","toLowerCase","includes","event","target","value","length","map","contact","id","backgroundImage","avatarURL","handle","propTypes","array","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEMC,Y;;;;;;;;;;;;;;;;;UAKJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE;AADD,K;;UAGRC,W,GAAc,UAACD,KAAD,EAAW;AACrB,YAAKE,QAAL,CAAc;AAAA,eAAO;AACnBF,UAAAA,KAAK,EAAEA,KAAK,CAACG,IAAN;AADY,SAAP;AAAA,OAAd;AAGH,K;;;;;;;6BACO;AAAA;;AAAA,UACCH,KADD,GACU,KAAKD,KADf,CACCC,KADD;AAAA,wBAE6B,KAAKI,KAFlC;AAAA,UAECC,QAFD,eAECA,QAFD;AAAA,UAEWC,eAFX,eAEWA,eAFX;AAIN,UAAMC,eAAe,GAAGP,KAAK,KAAK,EAAV,GACpBK,QADoB,GAEpBA,QAAQ,CAACG,MAAT,CAAgB,UAACC,CAAD;AAAA,eACdA,CAAC,CAACC,IAAF,CAAOC,WAAP,GAAqBC,QAArB,CAA8BZ,KAAK,CAACW,WAAN,EAA9B,CADc;AAAA,OAAhB,CAFJ;AAMA,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,WAAW,EAAC,iBAHd;AAIE,QAAA,KAAK,EAAEX,KAJT;AAKE,QAAA,QAAQ,EAAE,kBAACa,KAAD;AAAA,iBAAW,MAAI,CAACZ,WAAL,CAAiBY,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADF,EAWGR,eAAe,CAACS,MAAhB,KAA2BX,QAAQ,CAACW,MAApC,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZN,EAiBE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,eAAe,CAACU,GAAhB,CAAoB,UAACC,OAAD;AAAA,eACnB;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAqB,UAAA,SAAS,EAAC,mBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,eAAe,gBAAQF,OAAO,CAACG,SAAhB;AADV,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAOE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIH,OAAO,CAACR,IAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAIQ,OAAO,CAACI,MAAZ,CAFF,CAPF,EAWE;AACE,UAAA,OAAO,EAAE;AAAA,mBAAMhB,eAAe,CAACY,OAAD,CAArB;AAAA,WADX;AAEE,UAAA,SAAS,EAAC,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF,CADmB;AAAA,OAApB,CADH,CAjBF,CADF;AA0CD;;;;EAjEwBtB,S;;AAArBE,Y,CACGyB,S,GAAY;AACjBlB,EAAAA,QAAQ,EAAER,SAAS,CAAC2B,KAAV,CAAgBC,UADT;AAEjBnB,EAAAA,eAAe,EAAET,SAAS,CAAC6B,IAAV,CAAeD;AAFf,C;AAoErB,eAAe3B,YAAf","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\n\nclass ListContacts extends Component{\n  static propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onDeleteContact: PropTypes.func.isRequired,\n  }\n  state = {\n    query: ''\n  }\n  updateQuery = (query) => {\n      this.setState(() => ({\n        query: query.trim()\n      }))\n  }\n  render(){\n    const {query} = this.state\n    const {contacts, onDeleteContact} =this.props\n\n    const showingContacts = query === ''\n      ? contacts\n      : contacts.filter((c) => (\n          c.name.toLowerCase().includes(query.toLowerCase())\n      ))\n\n    return(\n      <div className='list-contacts'>\n        <div className='list-contacts-top'>\n            <input\n              className='search-contacts'\n              type='text'\n              placeholder='Search Contacts'\n              value={query}\n              onChange={(event) => this.updateQuery(event.target.value)}\n            />\n        </div>\n\n        {showingContacts.length !== contacts.length && (\n            <div>\n              Test\n            </div>\n        )}\n\n        <ol className='contact-list'>\n          {showingContacts.map((contact) => (\n            <li key={contact.id} className='contact-list-item'>\n              <div\n                className='contact-avatar'\n                style={{\n                  backgroundImage:`url(${contact.avatarURL})`\n                }}\n              ></div>\n              <div className='contact-details'>\n                <p>{contact.name}</p>\n                <p>{contact.handle}</p>\n              </div>\n              <button\n                onClick={() => onDeleteContact(contact)}\n                className='contact-remove'>\n                Remove\n              </button>\n            </li>\n          ))}\n        </ol>\n      </div>\n\n    )\n  }\n}\n\n\nexport default ListContacts\n"]},"metadata":{},"sourceType":"module"}